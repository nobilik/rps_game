services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: backendContainer
    env_file:
      - .env
    depends_on:
      - db
      - redis
      # - rabbitmq
    logging:
      driver: 'json-file'
      options:
        max-size: '10m' 
        max-file: '3' 
    restart: always
    networks:
      - app-network

  db:
    image: mysql:8.4
    ports:
      - "3306:3306"
    container_name: dbContainer
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:latest
    # ports:
    #   - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    container_name: redisContainer
    restart: always
    networks:
      - app-network

  # rabbitmq:
  #   image: rabbitmq:3.13-management-alpine
  #   hostname: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   container_name: rabbitmqContainer
  #   restart: always

volumes:
  db_data:
  # rabbitmq_data:
  redis_data:

networks:
  app-network:
    driver: bridge
